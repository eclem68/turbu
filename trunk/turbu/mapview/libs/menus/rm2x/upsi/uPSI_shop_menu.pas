unit uPSI_shop_menu;
{*****************************************************************************
* The contents of this file are used with permission, subject to
* the Mozilla Public License Version 1.1 (the "License"); you may
* not use this file except in compliance with the License. You may
* obtain a copy of the License at
* http://www.mozilla.org/MPL/MPL-1.1.html
*
* Software distributed under the License is distributed on an
* "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
* implied. See the License for the specific language governing
* rights and limitations under the License.
*
*****************************************************************************
*
* This file was created by Mason Wheeler.  He can be reached for support at
* www.turbu-rpg.com.
*****************************************************************************}

{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_rm2x_shop_menu = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TShopMenuPage(CL: TPSPascalCompiler);
procedure SIRegister_TShopQuantityBox(CL: TPSPascalCompiler);
procedure SIRegister_TShopCompatBox(CL: TPSPascalCompiler);
procedure SIRegister_TTransactionMenu(CL: TPSPascalCompiler);
procedure SIRegister_TStockMenu(CL: TPSPascalCompiler);
procedure SIRegister_TShopModeBox(CL: TPSPascalCompiler);
procedure SIRegister_rm2x_shop_menu(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TShopMenuPage(CL: TPSRuntimeClassImporter);
procedure RIRegister_TShopQuantityBox(CL: TPSRuntimeClassImporter);
procedure RIRegister_TShopCompatBox(CL: TPSRuntimeClassImporter);
procedure RIRegister_TTransactionMenu(CL: TPSRuntimeClassImporter);
procedure RIRegister_TStockMenu(CL: TPSRuntimeClassImporter);
procedure RIRegister_TShopModeBox(CL: TPSRuntimeClassImporter);
procedure RIRegister_rm2x_shop_menu(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   types
  ,shop_data
  ,rm2x_menu_components
  ,rpg_list
  ,rm2x_shop_menu
  ;


procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_rm2x_shop_menu]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TShopMenuPage(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TMenuPage', 'TShopMenuPage') do
  with CL.AddClassN(CL.FindClass('TMenuPage'),'TShopMenuPage') do
  begin
    RegisterProperty('descBox', 'TOnelineLabelBox', iptr);
    RegisterProperty('itemMenu', 'TGameItemMenu', iptr);
    RegisterProperty('mainBox', 'TShopModeBox', iptr);
    RegisterProperty('transactionBox', 'TTransactionMenu', iptr);
    RegisterProperty('state', 'TShopState', iptrw);
    RegisterProperty('inventory', 'TStoreInventory', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TShopQuantityBox(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TSystemFrame', 'TShopQuantityBox') do
  with CL.AddClassN(CL.FindClass('TSystemFrame'),'TShopQuantityBox') do
  begin
    RegisterProperty('item', 'TRpgItem', iptw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TShopCompatBox(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TRm2kGameMenuBox', 'TShopCompatBox') do
  with CL.AddClassN(CL.FindClass('TRm2kGameMenuBox'),'TShopCompatBox') do
  begin
    RegisterProperty('item', 'TRpgItem', iptw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TTransactionMenu(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TRm2kGameMenuBox', 'TTransactionMenu') do
  with CL.AddClassN(CL.FindClass('TRm2kGameMenuBox'),'TTransactionMenu') do
  begin
    RegisterProperty('state', 'TTransactionState', iptrw);
    RegisterProperty('item', 'TRpgItem', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TStockMenu(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TCustomScrollBox', 'TStockMenu') do
  with CL.AddClassN(CL.FindClass('TCustomScrollBox'),'TStockMenu') do
  begin
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TShopModeBox(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TRm2kGameMenuBox', 'TShopModeBox') do
  with CL.AddClassN(CL.FindClass('TRm2kGameMenuBox'),'TShopModeBox') do
  begin
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_rm2x_shop_menu(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TShopState', '( ss_selling, ss_buying, ss_transaction )');
  SIRegister_TShopModeBox(CL);
  SIRegister_TStockMenu(CL);
  CL.AddTypeS('TTransactionState', '( ts_off, ts_buying, ts_selling )');
  SIRegister_TTransactionMenu(CL);
  SIRegister_TShopCompatBox(CL);
  SIRegister_TShopQuantityBox(CL);
  SIRegister_TShopMenuPage(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TShopMenuPageinventory_R(Self: TShopMenuPage; var T: TStoreInventory);
begin T := Self.inventory; end;

(*----------------------------------------------------------------------------*)
procedure TShopMenuPagestate_W(Self: TShopMenuPage; const T: TShopState);
begin Self.state := T; end;

(*----------------------------------------------------------------------------*)
procedure TShopMenuPagestate_R(Self: TShopMenuPage; var T: TShopState);
begin T := Self.state; end;

(*----------------------------------------------------------------------------*)
procedure TShopMenuPagemainBox_R(Self: TShopMenuPage; var T: TShopModeBox);
begin T := Self.mainBox; end;

(*----------------------------------------------------------------------------*)
procedure TShopMenuPageTransactionBox_R(Self: TShopMenuPage; var T: TTransactionMenu);
begin T := Self.transactionBox; end;

(*----------------------------------------------------------------------------*)
procedure TShopMenuPageitemMenu_R(Self: TShopMenuPage; var T: TGameItemMenu);
begin T := Self.itemMenu; end;

(*----------------------------------------------------------------------------*)
procedure TShopMenuPagedescBox_R(Self: TShopMenuPage; var T: TOnelineLabelBox);
begin T := Self.descBox; end;

(*----------------------------------------------------------------------------*)
procedure TShopQuantityBoxitem_W(Self: TShopQuantityBox; const T: TRpgItem);
begin Self.item := T; end;

(*----------------------------------------------------------------------------*)
procedure TShopCompatBoxitem_W(Self: TShopCompatBox; const T: TRpgItem);
begin Self.item := T; end;

(*----------------------------------------------------------------------------*)
procedure TTransactionMenuitem_W(Self: TTransactionMenu; const T: TRpgItem);
begin Self.item := T; end;

(*----------------------------------------------------------------------------*)
procedure TTransactionMenuitem_R(Self: TTransactionMenu; var T: TRpgItem);
begin T := Self.item; end;

(*----------------------------------------------------------------------------*)
procedure TTransactionMenustate_W(Self: TTransactionMenu; const T: TTransactionState);
begin Self.state := T; end;

(*----------------------------------------------------------------------------*)
procedure TTransactionMenustate_R(Self: TTransactionMenu; var T: TTransactionState);
begin T := Self.state; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TShopMenuPage(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TShopMenuPage) do
  begin
    RegisterPropertyHelper(@TShopMenuPagedescBox_R,nil,'descBox');
    RegisterPropertyHelper(@TShopMenuPageitemMenu_R,nil,'itemMenu');
    RegisterPropertyHelper(@TShopMenuPagemainBox_R,nil,'mainBox');
    RegisterPropertyHelper(@TShopMenuPageTransactionBox_R,nil,'transactionBox');
    RegisterPropertyHelper(@TShopMenuPagestate_R,@TShopMenuPagestate_W,'state');
    RegisterPropertyHelper(@TShopMenuPageinventory_R,nil,'inventory');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TShopQuantityBox(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TShopQuantityBox) do
  begin
    RegisterPropertyHelper(nil,@TShopQuantityBoxitem_W,'item');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TShopCompatBox(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TShopCompatBox) do
  begin
    RegisterPropertyHelper(nil,@TShopCompatBoxitem_W,'item');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TTransactionMenu(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TTransactionMenu) do
  begin
    RegisterPropertyHelper(@TTransactionMenustate_R,@TTransactionMenustate_W,'state');
    RegisterPropertyHelper(@TTransactionMenuitem_R,@TTransactionMenuitem_W,'item');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TStockMenu(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TStockMenu) do
  begin
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TShopModeBox(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TShopModeBox) do
  begin
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_rm2x_shop_menu(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TShopModeBox(CL);
  RIRegister_TStockMenu(CL);
  RIRegister_TTransactionMenu(CL);
  RIRegister_TShopCompatBox(CL);
  RIRegister_TShopQuantityBox(CL);
  RIRegister_TShopMenuPage(CL);
end;

 
 
{ TPSImport_rm2x_shop_menu }
(*----------------------------------------------------------------------------*)
procedure TPSImport_rm2x_shop_menu.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_rm2x_shop_menu(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_rm2x_shop_menu.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_rm2x_shop_menu(ri);
end;
(*----------------------------------------------------------------------------*)

end.
